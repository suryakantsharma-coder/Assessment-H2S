{"ast":null,"code":"var _jsxFileName = \"/Users/suryakant/Desktop/Disk/assignment/product-dashboard/src/context/AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { products as mockProducts } from \"../data/mockProducts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [products] = useState(mockProducts);\n\n  // Preload cart with first 2 products for testing\n  const [cart, setCart] = useState([{\n    ...mockProducts[0],\n    qty: 1\n  }, {\n    ...mockProducts[1],\n    qty: 2\n  }]);\n  const [isCartOpen, setIsCartOpen] = useState(true); // Open by default for testing\n\n  const addToCart = product => {\n    setCart(prev => {\n      const existing = prev.find(p => p.id === product.id);\n      if (existing) {\n        return prev.map(p => p.id === product.id ? {\n          ...p,\n          qty: p.qty + 1\n        } : p);\n      }\n      return [...prev, {\n        ...product,\n        qty: 1\n      }];\n    });\n  };\n  const updateQty = (id, qty) => {\n    setCart(prev => prev.map(p => p.id === id ? {\n      ...p,\n      qty\n    } : p));\n  };\n  const removeItem = id => {\n    setCart(prev => prev.filter(p => p.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      products,\n      cart,\n      isCartOpen,\n      setIsCartOpen,\n      addToCart,\n      updateQty,\n      removeItem\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"o5Ia2dgSSArP1d2ph5M2/1a8VtM=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","products","mockProducts","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","cart","setCart","qty","isCartOpen","setIsCartOpen","addToCart","product","prev","existing","find","p","id","map","updateQty","removeItem","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/suryakant/Desktop/Disk/assignment/product-dashboard/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\nimport { products as mockProducts } from \"../data/mockProducts\";\n\nexport const AppContext = createContext();\n\nexport const AppProvider = ({ children }) => {\n  const [products] = useState(mockProducts);\n\n  // Preload cart with first 2 products for testing\n  const [cart, setCart] = useState([\n    { ...mockProducts[0], qty: 1 },\n    { ...mockProducts[1], qty: 2 }\n  ]);\n\n  const [isCartOpen, setIsCartOpen] = useState(true); // Open by default for testing\n\n  const addToCart = (product) => {\n    setCart(prev => {\n      const existing = prev.find(p => p.id === product.id);\n      if (existing) {\n        return prev.map(p =>\n          p.id === product.id ? { ...p, qty: p.qty + 1 } : p\n        );\n      }\n      return [...prev, { ...product, qty: 1 }];\n    });\n  };\n\n  const updateQty = (id, qty) => {\n    setCart(prev => prev.map(p => p.id === id ? { ...p, qty } : p));\n  };\n\n  const removeItem = (id) => {\n    setCart(prev => prev.filter(p => p.id !== id));\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        products,\n        cart,\n        isCartOpen,\n        setIsCartOpen,\n        addToCart,\n        updateQty,\n        removeItem\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,SAASC,QAAQ,IAAIC,YAAY,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,OAAO,MAAMC,UAAU,gBAAGN,aAAa,CAAC,CAAC;AAEzC,OAAO,MAAMO,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACP,QAAQ,CAAC,GAAGD,QAAQ,CAACE,YAAY,CAAC;;EAEzC;EACA,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAC/B;IAAE,GAAGE,YAAY,CAAC,CAAC,CAAC;IAAES,GAAG,EAAE;EAAE,CAAC,EAC9B;IAAE,GAAGT,YAAY,CAAC,CAAC,CAAC;IAAES,GAAG,EAAE;EAAE,CAAC,CAC/B,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpD,MAAMc,SAAS,GAAIC,OAAO,IAAK;IAC7BL,OAAO,CAACM,IAAI,IAAI;MACd,MAAMC,QAAQ,GAAGD,IAAI,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACpD,IAAIH,QAAQ,EAAE;QACZ,OAAOD,IAAI,CAACK,GAAG,CAACF,CAAC,IACfA,CAAC,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,GAAG;UAAE,GAAGD,CAAC;UAAER,GAAG,EAAEQ,CAAC,CAACR,GAAG,GAAG;QAAE,CAAC,GAAGQ,CACnD,CAAC;MACH;MACA,OAAO,CAAC,GAAGH,IAAI,EAAE;QAAE,GAAGD,OAAO;QAAEJ,GAAG,EAAE;MAAE,CAAC,CAAC;IAC1C,CAAC,CAAC;EACJ,CAAC;EAED,MAAMW,SAAS,GAAGA,CAACF,EAAE,EAAET,GAAG,KAAK;IAC7BD,OAAO,CAACM,IAAI,IAAIA,IAAI,CAACK,GAAG,CAACF,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGD,CAAC;MAAER;IAAI,CAAC,GAAGQ,CAAC,CAAC,CAAC;EACjE,CAAC;EAED,MAAMI,UAAU,GAAIH,EAAE,IAAK;IACzBV,OAAO,CAACM,IAAI,IAAIA,IAAI,CAACQ,MAAM,CAACL,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;EAChD,CAAC;EAED,oBACEhB,OAAA,CAACC,UAAU,CAACoB,QAAQ;IAClBC,KAAK,EAAE;MACLzB,QAAQ;MACRQ,IAAI;MACJG,UAAU;MACVC,aAAa;MACbC,SAAS;MACTQ,SAAS;MACTC;IACF,CAAE;IAAAhB,QAAA,EAEDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAACtB,EAAA,CA9CWF,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}